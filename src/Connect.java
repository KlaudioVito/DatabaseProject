import java.awt.BorderLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author Klaudio Vito Â© 2016
 */
public class Connect extends javax.swing.JFrame {

    /**
     * Creates new form Connect
     */
    public Connect() {
        initComponents();
        buttonGraphETF1.setEnabled(false);
        buttonGraphETF2.setEnabled(false);
        buttonGraphETF3.setEnabled(false);
        buttonGraphETF4.setEnabled(false);
        buttonClear.setEnabled(false);
       /* comboBoxDB.removeAllItems();
        comboBoxDB.addItem("kkdatadb");
        comboBoxDB.addItem("pubs2");
        comboBoxDB.addItem("F15336allteams");
        comboBoxDB.addItem("S16336allteams");
        comboBoxDB.addItem("S16336team1");
        comboBoxDB.addItem("S16336team2");
        comboBoxDB.addItem("S16336team3");
        comboBoxDB.addItem("S16336team4");
        comboBoxDB.addItem("S16336team5");
        comboBoxDB.addItem("S16336team6");
        comboBoxDB.setSelectedIndex(5);*/
        labelMessage.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGraph = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textFieldUser = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        buttonLogin = new javax.swing.JButton();
        buttonGraphETF1 = new javax.swing.JButton();
        labelMessage = new javax.swing.JLabel();
        buttonGraphETF2 = new javax.swing.JButton();
        buttonGraphETF3 = new javax.swing.JButton();
        buttonGraphETF4 = new javax.swing.JButton();
        buttonClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1100, 550));

        panelGraph.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout panelGraphLayout = new javax.swing.GroupLayout(panelGraph);
        panelGraph.setLayout(panelGraphLayout);
        panelGraphLayout.setHorizontalGroup(
            panelGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 890, Short.MAX_VALUE)
        );
        panelGraphLayout.setVerticalGroup(
            panelGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 542, Short.MAX_VALUE)
        );

        jLabel1.setText("CSC336 - Database Systems");

        jLabel2.setText("Prof. Peter H. Barnett, Ph.D");

        jLabel3.setText("Project 2 - Team 2");

        jLabel4.setText("Username");

        jLabel5.setText("Password");

        buttonLogin.setText("Log in");
        buttonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLoginActionPerformed(evt);
            }
        });

        buttonGraphETF1.setText("Graph Technology ETF");
        buttonGraphETF1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGraphETF1ActionPerformed(evt);
            }
        });

        labelMessage.setText("Messages");

        buttonGraphETF2.setText("Graph Agriculture ETF");
        buttonGraphETF2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGraphETF2ActionPerformed(evt);
            }
        });

        buttonGraphETF3.setText("Graph Banking ETF");
        buttonGraphETF3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGraphETF3ActionPerformed(evt);
            }
        });

        buttonGraphETF4.setText("Graph RealEstate ETF");
        buttonGraphETF4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGraphETF4ActionPerformed(evt);
            }
        });

        buttonClear.setText("Clear Graph");
        buttonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(20, 20, 20)
                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(textFieldUser, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(buttonLogin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonClear, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(buttonGraphETF1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                        .addComponent(buttonGraphETF2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonGraphETF3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonGraphETF4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(labelMessage)
                                .addGap(328, 328, 328)
                                .addComponent(jLabel2))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1)
                                .addComponent(panelGraph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(22, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(57, 57, 57))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addComponent(textFieldUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(labelMessage)
                    .addComponent(jLabel5)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(panelGraph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonLogin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonClear)
                        .addGap(144, 144, 144)
                        .addComponent(buttonGraphETF1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonGraphETF2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonGraphETF3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonGraphETF4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLoginActionPerformed
        // TODO add your handling code here:
        final XYSeries seriesINDEX1 = new XYSeries("UNDERLYING INDEX");
        try{
            try{ Class.forName("com.mysql.jdbc.Driver");
            }catch(Exception e){
                labelMessage.setText("Error loading driver");
            }
            username = textFieldUser.getText();
            password = new String(passwordField.getPassword());
            database = "S16336team2";//comboBoxDB.getSelectedItem().toString();
            con = DriverManager.getConnection("jdbc:mysql://134.74.126.107:3306/" + database, username, password);
            labelMessage.setText("Connected to Database");
            labelMessage.setVisible(true);
            textFieldUser.setText("");
            passwordField.setText("");
        }catch (Exception e){
            try{con.close();}catch(Exception ex){
                labelMessage.setText("Unable to load driver");
                labelMessage.setVisible(true);
                textFieldUser.setText("");
                passwordField.setText("");
            }
        }
        buttonGraphETF1.setEnabled(true);
        buttonGraphETF2.setEnabled(true);
        buttonGraphETF3.setEnabled(true);
        buttonGraphETF4.setEnabled(true);
        buttonClear.setEnabled(true);
        //comboBoxDB.setSelectedIndex(5); 
    }//GEN-LAST:event_buttonLoginActionPerformed
    
    private void buttonGraphETF1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGraphETF1ActionPerformed
        buttonGraphETF1.setEnabled(false);
        buttonGraphETF2.setEnabled(true);
        buttonGraphETF3.setEnabled(true);
        buttonGraphETF4.setEnabled(true);
        final XYSeries seriesINDEX1 = new XYSeries("UNDERLYING INDEX");
 
        try {
            stt = con.createStatement();
            ResultSet rs =  stt.executeQuery("select ETF1_PRICE from ETF1_GRAPH_DATA where ETF1_PRICE > 0");
            stt = con.createStatement();
            ResultSet rs1 = stt.executeQuery("select INDEX1_PRICE from ETF1_GRAPH_DATA where INDEX1_PRICE > 0");
            int interval = 1;
            while (rs.next()){
                seriesETF1.add(interval, rs.getDouble(1));
                interval++;
            }
            interval = 1;
            while(rs1.next()) {
                seriesINDEX1.add(interval, rs1.getDouble(1));
                interval++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Connect.class.getName()).log(Level.SEVERE, null, ex);
        }
  
        final XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(seriesETF1);
        dataset.addSeries(seriesINDEX1);
       
        JFreeChart chart = ChartFactory.createXYLineChart(
            "TECHNOLOGY ETF VS UNDERLYING INDEX",      // chart title
            "10 Minute Interval",                      // x axis label
            "PRICE",                      // y axis label
            dataset,                  // data
            PlotOrientation.VERTICAL,
            true,                     // include legend
            true,                     // tooltips
            false                     // urls
        );

        ChartPanel cp = new ChartPanel(chart); 

        panelGraph.setLayout(new java.awt.BorderLayout());
        panelGraph.add(cp, BorderLayout.CENTER);
        panelGraph.validate();
    }//GEN-LAST:event_buttonGraphETF1ActionPerformed

    private void buttonGraphETF2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGraphETF2ActionPerformed
        // TODO add your handling code here:
        buttonGraphETF1.setEnabled(true);
        buttonGraphETF2.setEnabled(false);
        buttonGraphETF3.setEnabled(true);
        buttonGraphETF4.setEnabled(true);
        final XYSeries seriesINDEX1 = new XYSeries("UNDERLYING INDEX");
        
        try {
            stt = con.createStatement();
            ResultSet rs =  stt.executeQuery("select ETF1_PRICE from ETF2_GRAPH_DATA where ETF1_PRICE > 0");
            stt = con.createStatement();
            ResultSet rs1 = stt.executeQuery("select INDEX1_PRICE from ETF2_GRAPH_DATA where INDEX1_PRICE > 0");
            int interval = 1;
            while (rs.next()){
                seriesETF2.add(interval, rs.getDouble(1));
                interval++;
            }
            interval = 1;
            while(rs1.next()) {
                seriesINDEX1.add(interval, rs1.getDouble(1));
                interval++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Connect.class.getName()).log(Level.SEVERE, null, ex);
        }
  
        final XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(seriesETF2);
        dataset.addSeries(seriesINDEX1);
       
        JFreeChart chart = ChartFactory.createXYLineChart(
            "AGRICULTURE ETF VS UNDERLYING INDEX",      // chart title
            "10 Minute Interval",                      // x axis label
            "PRICE",                      // y axis label
            dataset,                  // data
            PlotOrientation.VERTICAL,
            true,                     // include legend
            true,                     // tooltips
            false                     // urls
        );
        
        ChartPanel cp = new ChartPanel(chart); 
        
        panelGraph.setLayout(new java.awt.BorderLayout());
        panelGraph.add(cp, BorderLayout.CENTER);
        panelGraph.validate();
    }//GEN-LAST:event_buttonGraphETF2ActionPerformed

    private void buttonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearActionPerformed
        // TODO add your handling code here:
        panelGraph.removeAll();
        panelGraph.repaint();
        buttonGraphETF1.setEnabled(true);
        buttonGraphETF2.setEnabled(true);
        buttonGraphETF3.setEnabled(true);
        buttonGraphETF4.setEnabled(true);
    }//GEN-LAST:event_buttonClearActionPerformed

    private void buttonGraphETF3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGraphETF3ActionPerformed
        // TODO add your handling code here:
        buttonGraphETF1.setEnabled(true);
        buttonGraphETF2.setEnabled(true);
        buttonGraphETF3.setEnabled(false);
        buttonGraphETF4.setEnabled(true);
        final XYSeries seriesINDEX1 = new XYSeries("UNDERLYING INDEX");
        try {
            stt = con.createStatement();
            ResultSet rs =  stt.executeQuery("select ETF1_PRICE from ETF3_GRAPH_DATA where ETF1_PRICE > 0");
            stt = con.createStatement();
            ResultSet rs1 = stt.executeQuery("select INDEX1_PRICE from ETF3_GRAPH_DATA where INDEX1_PRICE > 0");
            int interval = 1;
            while (rs.next()){
                seriesETF3.add(interval, rs.getDouble(1));
                interval++;
            }
            interval = 1;
            while(rs1.next()) {
                seriesINDEX1.add(interval, rs1.getDouble(1));
                interval++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Connect.class.getName()).log(Level.SEVERE, null, ex);
        }
  
        final XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(seriesETF3);
        dataset.addSeries(seriesINDEX1);
       
        JFreeChart chart = ChartFactory.createXYLineChart(
            "BANKING ETF VS UNDERLYING INDEX",      // chart title
            "10 Minute Interval",                      // x axis label
            "PRICE",                      // y axis label
            dataset,                  // data
            PlotOrientation.VERTICAL,
            true,                     // include legend
            true,                     // tooltips
            false                     // urls
        );
        
        ChartPanel cp = new ChartPanel(chart); 

        panelGraph.setLayout(new java.awt.BorderLayout());
        panelGraph.add(cp, BorderLayout.CENTER);
        panelGraph.validate();
    }//GEN-LAST:event_buttonGraphETF3ActionPerformed

    private void buttonGraphETF4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGraphETF4ActionPerformed
        // TODO add your handling code here:
        buttonGraphETF1.setEnabled(true);
        buttonGraphETF2.setEnabled(true);
        buttonGraphETF3.setEnabled(true);
        buttonGraphETF4.setEnabled(false);
        final XYSeries seriesINDEX1 = new XYSeries("UNDERLYING INDEX");
        try {
            stt = con.createStatement();
            ResultSet rs =  stt.executeQuery("select ETF1_PRICE from ETF4_GRAPH_DATA where ETF1_PRICE > 0");
            stt = con.createStatement();
            ResultSet rs1 = stt.executeQuery("select INDEX1_PRICE from ETF4_GRAPH_DATA where INDEX1_PRICE > 0");
            int interval = 1;
            while (rs.next()){
                seriesETF4.add(interval, rs.getDouble(1));
                interval++;
            }
            interval = 1;
            while(rs1.next()) {
                seriesINDEX1.add(interval, rs1.getDouble(1));
                interval++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Connect.class.getName()).log(Level.SEVERE, null, ex);
        }
  
        final XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(seriesETF4);
        dataset.addSeries(seriesINDEX1);
       
        JFreeChart chart = ChartFactory.createXYLineChart(
            "REAL ESTATE ETF VS UNDERLYING INDEX",      // chart title
            "10 Minute Interval",                      // x axis label
            "PRICE",                      // y axis label
            dataset,                  // data
            PlotOrientation.VERTICAL,
            true,                     // include legend
            true,                     // tooltips
            false                     // urls
        );
        
        ChartPanel cp = new ChartPanel(chart); 
        
        panelGraph.setLayout(new java.awt.BorderLayout());
        panelGraph.add(cp, BorderLayout.CENTER);
        panelGraph.validate();
    }//GEN-LAST:event_buttonGraphETF4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Connect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Connect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Connect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Connect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Connect().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonClear;
    private javax.swing.JButton buttonGraphETF1;
    private javax.swing.JButton buttonGraphETF2;
    private javax.swing.JButton buttonGraphETF3;
    private javax.swing.JButton buttonGraphETF4;
    private javax.swing.JButton buttonLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel labelMessage;
    private javax.swing.JPanel panelGraph;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField textFieldUser;
    // End of variables declaration//GEN-END:variables
    
    private Connection con;
    private Statement stt;
    private String username = "";
    private String password = ""; 
    private String database = "";
    //Map <String, Double> mapETF = new TreeMap<>();
    //private DefaultCategoryDataset seriesETF = new DefaultCategoryDataset();
   // private DefaultCategoryDataset seriesULying = new DefaultCategoryDataset();
    final XYSeries seriesETF1 = new XYSeries("TECHNOLOGY ETF");
    final XYSeries seriesETF2 = new XYSeries("AGRICULTURE ETF");
    final XYSeries seriesETF3 = new XYSeries("BANKING ETF");
    final XYSeries seriesETF4 = new XYSeries("REAL ESTATE ETF");
}
